# Build builder image
FROM ruby:3.2.2-alpine as builder

WORKDIR /app

# Install dependencies
RUN set -ex
RUN apk update
RUN apk add libreoffice
RUN apk add --no-cache --virtual \
    .ruby-gemdeps \
    build-base \
    postgresql14-dev \
    postgresql14-client \
    tzdata \
    yarn \
    libc-dev libxml2-dev libxslt-dev gcompat openrc-doc

RUN apk --update add less && apk -U upgrade && apk --no-cache upgrade musl

# Copy required files
COPY .ruby-version Gemfile* ./

# Install gems and remove gem cache
RUN bundler -v && \
    bundle update && \
    bundle install --jobs 4 --retry 3

# Install node packages defined in package.json
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile --check-files

# Copy all files to /app (except what is defined in .dockerignore)
COPY . .

# Copy govuk assets
RUN cp -r node_modules/govuk-frontend/dist/govuk/assets/. public/assets/

# Cleanup to save space in the production image
RUN rm -rf node_modules log/* tmp/* /tmp && \
    rm -rf /usr/local/bundle/cache && \
    find /usr/local/bundle/gems -name "*.c" -delete && \
    find /usr/local/bundle/gems -name "*.h" -delete && \
    find /usr/local/bundle/gems -name "*.o" -delete && \
    find /usr/local/bundle/gems -name "*.html" -delete

# Build runtime image
FROM builder as dev

ENV PUMA_PORT 3000
EXPOSE $PUMA_PORT

COPY ./config/docker/ /etc/init.d
RUN chmod +x /etc/init.d/*

# The application runs from /app
WORKDIR /app

# Create log and tmp
RUN mkdir -p log tmp

ARG BUILD_DATE
ARG BUILD_TAG
ARG COMMIT_ID
ENV APP_BUILD_DATE=${BUILD_DATE}
ENV APP_BUILD_TAG=${BUILD_TAG}
ENV APP_GIT_COMMIT=${COMMIT_ID}

ENTRYPOINT ["/etc/init.d/init-all"]
